name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install API dependencies
        run: cd apps/api && npm ci

      - name: Install Web dependencies
        run: cd apps/web && npm ci

      - name: Lint API (if available)
        run: cd apps/api && npm run lint --if-present
        continue-on-error: true

      - name: Lint Web (if available)
        run: cd apps/web && npm run lint --if-present
        continue-on-error: true

      - name: Build API
        run: cd apps/api && npm run build

      - name: Build Web
        run: cd apps/web && npm run build
        env:
          NEXT_PUBLIC_KEYCLOAK_URL: http://localhost:8080
          NEXT_PUBLIC_KEYCLOAK_REALM: myrealm
          NEXT_PUBLIC_KEYCLOAK_CLIENT_ID: my-react-spa
          NEXT_PUBLIC_GRAPHQL_URL: http://localhost:4000/graphql

      - name: Test API (if available)
        run: cd apps/api && npm test --if-present
        continue-on-error: true

      - name: Test Web (if available)
        run: cd apps/web && npm test --if-present
        continue-on-error: true

  docker-compose-test:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Docker Compose configuration
        run: docker compose config

      - name: Build Docker images
        run: docker compose build --no-cache

      - name: Start services
        run: |
          docker compose up -d
          echo "Waiting for services to start..."
          sleep 60

      - name: Check service status
        run: |
          echo "=== Service Status ==="
          docker compose ps
          echo ""
          echo "=== Keycloak Logs ==="
          docker compose logs --tail=20 keycloak
          echo ""
          echo "=== API Logs ==="
          docker compose logs --tail=20 api
          echo ""
          echo "=== Web Logs ==="
          docker compose logs --tail=20 web

      - name: Test service endpoints
        run: |
          echo "Testing Keycloak health..."
          timeout 30 bash -c 'until curl -f http://localhost:8080/realms/master; do sleep 2; done' || echo "Keycloak not ready"

          echo "Testing API health..."
          timeout 30 bash -c 'until curl -f http://localhost:4000/graphql; do sleep 2; done' || echo "API not ready"

          echo "Testing Web health..."
          timeout 30 bash -c 'until curl -f http://localhost:3000; do sleep 2; done' || echo "Web not ready"
        continue-on-error: true

      - name: Cleanup
        run: docker compose down -v
        if: always()

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install dependencies for audit
        run: |
          cd apps/api && npm ci
          cd ../web && npm ci

      - name: Run security audit on API
        run: cd apps/api && npm audit --audit-level=high
        continue-on-error: true

      - name: Run security audit on Web
        run: cd apps/web && npm audit --audit-level=high
        continue-on-error: true
